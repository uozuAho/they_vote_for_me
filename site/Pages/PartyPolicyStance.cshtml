@page "{id:int}"
@model PartyPolicyStanceModel
@{
    ViewData["Title"] = "Home page";
}

<script src="https://cdn.plot.ly/plotly-2.8.3.min.js"></script>

<div class="text-center">
    <h1 id="policyTitle" class="display-4"></h1>
    <p id="policyDescription"></p>
    <a href="https://theyvoteforyou.org.au/policies/@RouteData.Values["id"]">
        View policy on They Vote For You
    </a>
</div>


<div id="chartElement" style="width:1000px;height:800px;"></div>

<ul id="membersDataElement"></ul>

<script>
    function handleHistogramClick(event, memberDetails) {
        const party = event.points[0].data.name;
        const partyMembers = memberDetails.filter(m => m.party === party);

        const members = [];
        for (const i of event.points[0].pointIndices) {
            members.push(partyMembers[i]);
        }

        $('#membersDataElement').empty();
        for (const member of members) {
            const el = $('<li></li>').text(`${member.name}, ${member.electorate}`);
            $('#membersDataElement').append(el);
        }
    }

    fetch(`/api/policy/@RouteData.Values["id"]`)
        .then(response => response.json())
        .then(policy => {
            $('#policyTitle').text(policy.title);
            $('#policyDescription').text(policy.description);

            const traces = policy.partyAgreements.map(a => ({
                name: a.party,
                x: a.agreements,
                type: 'histogram',
                marker: {
                    color: a.color
                }
            }));

            const layout = {barmode: "stack"};
            Plotly.newPlot('chartElement', traces, layout);

            document.getElementById('chartElement')
                .on('plotly_click',
                    event => {
                        handleHistogramClick(event, policy.memberDetails);
                    });
        });
</script>
